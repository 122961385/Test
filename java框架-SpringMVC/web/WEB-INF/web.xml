<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- Springmvc的前端控制器 / 核心控制器:  DispatcherServlet -->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 给DispatcherServlet配置初始化参数：
                指定Springmvc的核心配置文件
         -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>

        <!--
            load-on-startup: 设置DispatcherServlet在服务器启动时加载。
                Servlet的创建时机：
                     1. 请求到达以后创建
                     2. 服务器启动即创建
         -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- 指定请求的匹配 -->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!--
        可以配置/ ，此工程 所有请求全部由springmvc解析，此种方式可以实现 RESTful方式，需要特殊处理对静态文件的解析不能由springmvc解析
        可以配置*.do或*.action，所有请求的url扩展名为.do或.action由springmvc解析，此种方法常用
        不可以/*，如果配置/*，返回jsp也由springmvc解析，这是不对的。

         -->
        <url-pattern>*.action</url-pattern>
    </servlet-mapping>


    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
</web-app>